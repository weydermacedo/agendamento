<?php session_start();require_once "config.php";$chave_secreta="packtypebot";function base64UrlDecode($input){$remainder=strlen($input)%4;if($remainder){$padlen=4-$remainder;$input.=str_repeat('=',$padlen);}return base64_decode(str_replace(['-','_'],['+','/'],$input));}function verificarTokenAutenticacao($chave_secreta){$headers=getallheaders();if(!isset($headers['Authorization'])){error_log('Token de autenticação não fornecido');echo json_encode(['status'=>'error','message'=>'Token de autenticação não fornecido.']);http_response_code(401);exit;}$authHeader=$headers['Authorization'];if(stripos($authHeader,'Bearer ')!==0){error_log('Tipo de autenticação inválido');echo json_encode(['status'=>'error','message'=>'Tipo de autenticação inválido.']);http_response_code(401);exit;}$token=substr($authHeader,7);$tokenParts=explode('.',$token);if(count($tokenParts)!==3){error_log('Estrutura do token inválida');echo json_encode(['status'=>'error','message'=>'Estrutura do token inválida.']);http_response_code(401);exit;}list($header,$payload,$signature)=$tokenParts;$decodedHeader=json_decode(base64UrlDecode($header),true);$decodedPayload=json_decode(base64UrlDecode($payload),true);$validSignature=hash_hmac('sha256',"$header.$payload",$chave_secreta,true);$base64UrlSignatureCheck=str_replace(['+','/','='],['-','_',''],base64_encode($validSignature));if($base64UrlSignatureCheck!==$signature){error_log('Assinatura do token inválida');echo json_encode(['status'=>'error','message'=>'Assinatura do token inválida.']);http_response_code(401);exit;}if($decodedPayload['exp']<time()){error_log('Token expirado');echo json_encode(['status'=>'error','message'=>'Token expirado.']);http_response_code(401);exit;}}function initAuth($chave_secreta){if(!function_exists('base64UrlDecode')||!function_exists('verificarTokenAutenticacao')){error_log('Funções de autenticação faltando');echo json_encode(['status'=>'error','message'=>'Funções de autenticação faltando.']);http_response_code(500);exit;}verificarTokenAutenticacao($chave_secreta);}function verificaHorarioDisponivel($conn,$data_hora){initAuth($GLOBALS['chave_secreta']);$sql="SELECT * FROM agendamentos WHERE data_hora = ?";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);return false;}$stmt->bind_param("s",$data_hora);$stmt->execute();$result=$stmt->get_result();return $result->num_rows==0;}function verificaDisponibilidadeAtendente($conn,$data_hora,$atendente){initAuth($GLOBALS['chave_secreta']);$sql="SELECT * FROM agendamentos WHERE data_hora = ? AND atendente = ?";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);return false;}$stmt->bind_param("ss",$data_hora,$atendente);$stmt->execute();$result=$stmt->get_result();return $result->num_rows==0;}function getServicosPorAtendente($conn,$atendente){initAuth($GLOBALS['chave_secreta']);$sql="SELECT s.* FROM servicos s
            JOIN atendente_servicos asv ON s.id = asv.servico_id
            JOIN atendentes a ON a.id = asv.atendente_id
            WHERE a.nome = ?";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);return false;}$stmt->bind_param("s",$atendente);$stmt->execute();return $stmt->get_result();}function getServicos($conn,$atendente=null){initAuth($GLOBALS['chave_secreta']);if($atendente===null){$sql="SELECT * FROM servicos";return $conn->query($sql);}else{return getServicosPorAtendente($conn,$atendente);}}function getHorarios($conn,$atendente=null){initAuth($GLOBALS['chave_secreta']);$sql="SELECT * FROM horarios";$result=$conn->query($sql);if($atendente==null){return $result;}$horariosDisponiveis=[];while($row=$result->fetch_assoc()){$data_hora=$row['horario'];if(verificaDisponibilidadeAtendente($conn,$data_hora,$atendente)){$horariosDisponiveis[]=$row;}}return $horariosDisponiveis;}function getAtendentes($conn,$somente_disponiveis=false){initAuth($GLOBALS['chave_secreta']);if($somente_disponiveis){$sql="SELECT * FROM atendentes WHERE disponivel = 1";}else{$sql="SELECT * FROM atendentes";}return $conn->query($sql);}function agendarHorarioPorURL($conn,$nome,$telefone,$servico,$data,$horario,$atendente){initAuth($GLOBALS['chave_secreta']);$data_hora=$data." ".$horario;if(verificaHorarioDisponivel($conn,$data_hora)&&verificaDisponibilidadeAtendente($conn,$data_hora,$atendente)){$sql="INSERT INTO agendamentos (nome, telefone, data_hora, servico, atendente) VALUES (?, ?, ?, ?, ?)";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);return['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error];}$stmt->bind_param("sssss",$nome,$telefone,$data_hora,$servico,$atendente);if($stmt->execute()){return['status'=>'success','message'=>'Agendamento realizado com sucesso!'];}else{return['status'=>'error','message'=>'Erro ao realizar o agendamento: '.$stmt->error];}}else{return['status'=>'error','message'=>'Horário ou atendente indisponível.'];}}function atribuirServicoAtendente($conn,$atendente_id,$servico_id){initAuth($GLOBALS['chave_secreta']);$sql="INSERT INTO atendente_servicos (atendente_id, servico_id) VALUES (?, ?)";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);return['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error];}$stmt->bind_param("ii",$atendente_id,$servico_id);if($stmt->execute()){return['status'=>'success','message'=>'Serviço atribuído ao atendente com sucesso!'];}else{return['status'=>'error','message'=>'Erro ao atribuir o serviço: '.$stmt->error];}}verificarTokenAutenticacao($chave_secreta);if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['servicos'])){$conn=getConnection();$atendente=isset($_GET['atendente'])?$_GET['atendente']:null;$servicos=getServicos($conn,$atendente);$data=[];while($servico=$servicos->fetch_assoc()){$data[]=$servico;}echo json_encode($data);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['horarios'])){$conn=getConnection();$atendente=isset($_GET['atendente'])?$_GET['atendente']:null;$horarios=getHorarios($conn,$atendente);$data=[];foreach($horarios as $horario){$data[]=$horario;}echo json_encode($data);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['atendentes'])){$conn=getConnection();$somente_disponiveis=isset($_GET['somente_disponiveis'])&&$_GET['somente_disponiveis']=='1';$atendentes=getAtendentes($conn,$somente_disponiveis);$data=[];while($atendente=$atendentes->fetch_assoc()){$data[]=$atendente;}echo json_encode($data);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['agendar'])){$conn=getConnection();$nome=$_GET["nome"];$telefone=urldecode($_GET["telefone"]);$servico=$_GET["servico"];$data=$_GET["data"];$horario=$_GET["horario"];$atendente=$_GET["atendente"];$response=agendarHorarioPorURL($conn,$nome,$telefone,$servico,$data,$horario,$atendente);echo json_encode($response);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['consultar'])){$conn=getConnection();$telefone=$_GET['telefone'];$sql="SELECT * FROM agendamentos WHERE telefone = ?";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmt->bind_param("s",$telefone);$stmt->execute();$result=$stmt->get_result();$reservas=[];while($row=$result->fetch_assoc()){$reservas[]=$row;}echo json_encode($reservas);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['consultar_nome'])){$conn=getConnection();$nome=$_GET['consultar_nome'];$sql="SELECT * FROM agendamentos WHERE nome LIKE ?";$like_nome="%$nome%";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmt->bind_param("s",$like_nome);$stmt->execute();$result=$stmt->get_result();$reservas=[];while($row=$result->fetch_assoc()){$reservas[]=$row;}echo json_encode($reservas);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['consultar_data_hora'])){$conn=getConnection();$data_hora=$_GET['consultar_data_hora'];$sql="SELECT * FROM agendamentos WHERE data_hora = ?";$stmt=$conn->prepare($sql);if(!$stmt){error_log("Erro ao preparar a consulta: ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmt->bind_param("s",$data_hora);$stmt->execute();$result=$stmt->get_result();$reservas=[];while($row=$result->fetch_assoc()){$reservas[]=$row;}echo json_encode($reservas);exit;}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['cancelar'])){if(isset($_GET['telefone'])&&isset($_GET['data'])){$conn=getConnection();$telefone=$_GET['telefone'];$data=$_GET['data'];$dataFormatoCorreto=(DateTime::createFromFormat('d-m-Y',$data))->format('d-m-Y').'%';$check_sql="SELECT id FROM agendamentos WHERE telefone = ? AND data_hora LIKE ?";$stmtCheck=$conn->prepare($check_sql);if(!$stmtCheck){error_log("Erro ao preparar a consulta (verificação de agendamento): ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmtCheck->bind_param("ss",$telefone,$dataFormatoCorreto);$stmtCheck->execute();$resultCheck=$stmtCheck->get_result();if($resultCheck->num_rows>0){$delete_sql="DELETE FROM agendamentos WHERE telefone = ? AND data_hora LIKE ?";$stmt=$conn->prepare($delete_sql);if(!$stmt){error_log("Erro ao preparar a consulta (cancelar): ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmt->bind_param("ss",$telefone,$dataFormatoCorreto);if($stmt->execute()){echo json_encode(['status'=>'success','message'=>'Agendamento cancelado com sucesso!']);}else{echo json_encode(['status'=>'error','message'=>'Erro ao cancelar o agendamento: '.$stmt->error]);}$stmt->close();}else{error_log("Nenhum agendamento encontrado para o telefone '$telefone' e data '$data'.");echo json_encode(['status'=>'error','message'=>'Nenhum agendamento encontrado com os dados fornecidos.']);}$stmtCheck->close();exit;}else{echo json_encode(['status'=>'error','message'=>'Telefone ou data não fornecidos.']);exit;}}if($_SERVER['REQUEST_METHOD']==='GET'&&isset($_GET['horarios_disponiveis'])){$conn=getConnection();$data=$_GET['data'];$atendente=$_GET['atendente'];$dateTime=DateTime::createFromFormat('d-m-Y',$data);if($dateTime===false){error_log("Data inválida: $data");echo json_encode(['status'=>'error','message'=>'Data inválida. Utilize o formato dd-mm-yyyy.']);exit;}$dataFormatoCorreto=$dateTime->format('d-m-Y');$sqlOcupados="SELECT DATE_FORMAT(STR_TO_DATE(data_hora, '%d-%m-%Y %H:%i'), '%H:%i') as hora_ocupada 
                    FROM agendamentos WHERE SUBSTR(data_hora, 1, 10) = ? AND atendente = ?";$stmtOcupados=$conn->prepare($sqlOcupados);if(!$stmtOcupados){error_log("Erro ao preparar a consulta (ocupados): ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$stmtOcupados->bind_param("ss",$dataFormatoCorreto,$atendente);$stmtOcupados->execute();$resultOcupados=$stmtOcupados->get_result();$horariosOcupados=[];while($row=$resultOcupados->fetch_assoc()){$horariosOcupados[]=$row['hora_ocupada'];}$sqlHorarios="SELECT horario FROM horarios";$resultHorarios=$conn->query($sqlHorarios);if(!$resultHorarios){error_log("Erro ao preparar a consulta (horários): ".$conn->error);echo json_encode(['status'=>'error','message'=>'Erro ao preparar a consulta: '.$conn->error]);exit;}$horariosDisponiveis=[];while($row=$resultHorarios->fetch_assoc()){if(!in_array($row['horario'],$horariosOcupados)){$horariosDisponiveis[]=$row['horario'];}}echo json_encode($horariosDisponiveis);exit;}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_GET['atribuir_servico'])){$data=json_decode(file_get_contents('php://input'),true);$atendente_id=$data['atendente_id'];$servico_id=$data['servico_id'];$conn=getConnection();$response=atribuirServicoAtendente($conn,$atendente_id,$servico_id);echo json_encode($response);exit;}http_response_code(404);echo json_encode(['status'=>'error','message'=>'Endpoint não encontrado.']);?>